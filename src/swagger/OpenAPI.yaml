openapi: 3.0.3
info:
  title: Swagger Phone Catalog - OpenAPI 3.0
  description: |-
    This is a sample Phone Catalog Server based on the OpenAPI 3.0 specification.  
    Some useful links:
    - [The Phone Catalog repository](https://github.com/fs-jan24-codeup/phone-catalog-backend)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://localhost:3000
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:3000
paths:
  /products:
    get:
      tags:
        - products
      summary: Get all products
      operationId: getAllProducts
      parameters:
        - name: perPage
          in: query
          description: Limit the number of products to retrieve per page
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: Page number to retrieve
          required: false
          schema:
            type: integer
            default: 1
        - name: sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [name, price]
            default: name
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - name: category
          in: query
          description: Filter products by category
          required: false
          schema:
            type: string
            enum: ['', phones, accessories, tablets]
            default: ''
        - name: searchString
          in: query
          description: Search products by name
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/phones:
    get:
      tags:
        - products
      summary: Get phones
      operationId: getPhones
      parameters:
        - name: perPage
          in: query
          description: Limit the number of products to retrieve per page
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          description: Page number to retrieve
          required: false
          schema:
            type: integer
            default: 1
        - name: sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [name, price]
            default: name
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - name: searchString
          in: query
          description: Search products by name
          required: false
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/recommended/{id}:
    get:
      tags:
        - products
      summary: Get recommended products by ID
      operationId: getRecommendedProducts
      parameters:
        - name: id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/new:
    get:
      tags:
        - products
      summary: Get new products
      operationId: getNewProducts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      tags:
        - products
      summary: Get product by ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /favourites:
    get:
      tags:
        - favourites
      summary: Get all favourites
      operationId: getAllFavourites
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favourite'
  /users:
    get:
      tags:
        - users
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /home:
    get:
      tags:
        - home
      summary: Get all phones in home
      operationId: getAllPhonesInHome
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
  /products/tablets:
    get:
      tags:
        - products
      summary: Get tablets
      operationId: getTablets
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/accessories:
    get:
      tags:
        - products
      summary: Get accessories
      operationId: getAccessories
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    Favourite:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        userId:
          type: integer
          format: int64
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
    Phone:
      type: object
